{"version":3,"file":"static/js/42.a352de00.chunk.js","mappings":"0LAEO,MAAMA,EAAaC,EAAAA,GAAOC,GAAG;;eCEpC,MAgBA,EAhBgBC,KAEZC,EAAAA,EAAAA,MAACJ,EAAU,CAAAK,SAAA,EACTC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BACJD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,OAAMH,SAAC,YAElBC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,UAASH,SAAC,oBCVhBI,GAAYR,EAAAA,EAAAA,IAAOS,EAAAA,GAAQ;;;;;;;;;;;;;ECSxC,EARiBC,IAAmB,IAAlB,SAAEC,GAAUD,EAC5B,OACEL,EAAAA,EAAAA,KAAAO,EAAAA,SAAA,CAAAR,UACEC,EAAAA,EAAAA,KAACG,EAAS,CAACD,GAAII,EAASP,SAAC,2BACxB,E,+BCNA,MAAMS,EAAab,EAAAA,GAAOC,GAAG;;;;;;ECiEpC,EA7DqBa,KACnB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,OAC3C,QAAEC,IAAYC,EAAAA,EAAAA,KAEdC,EAAOL,EAAeA,EAAaM,aAAaC,MAAM,EAAG,GAAK,GAC9DC,EAAQR,EAAeS,KAAKC,MAAkC,GAA5BV,EAAaW,cAAqB,EACpEC,EAAWZ,EAAeA,EAAaY,SAAW,GAClDC,EAAcb,EAChBA,EAAac,OAAOC,KAAIC,GAASA,EAAMC,OAAMC,KAAK,MAClD,GAuBJ,OArBAC,EAAAA,EAAAA,YAAU,KACR,IAAKhB,EAAS,OAESiB,WACrB,IAEE,MAAMC,QAAkBC,EAAAA,EAAAA,IAAkBnB,GAC1CF,EAAgBoB,EAElB,CAAE,MAAOE,GACPC,QAAQD,MAAM,gCAAiCA,EAGjD,CACE,EAIJE,EAAgB,GACf,CAACtB,IAECH,GAKHZ,EAAAA,EAAAA,MAACU,EAAU,CAAAT,SAAA,EACTC,EAAAA,EAAAA,KAAA,OACEoC,IACE1B,EAAa2B,YACT,kCAAkC3B,EAAa2B,cAC/C,gHAENC,IAAK5B,EAAa6B,SAGpBzC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CACGW,EAAa6B,MAAM,KAAGxB,EAAK,QAE9BjB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,eAAamB,GAAgB,WAAW,SAC3ClB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIuB,KACJtB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIwB,WAtBDvB,EAAAA,EAAAA,KAACwC,EAAAA,EAAM,GAwBD,ECvCjB,EAjByBC,KAAO,IAADC,EAAAC,EAC7B,MAAMrC,GAAWsC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAA2B,QAArBJ,EAAe,QAAfC,EAACrC,EAASyC,aAAK,IAAAJ,OAAA,EAAdA,EAAgBK,YAAI,IAAAN,EAAAA,EAAI,KAEpD,OACE5C,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACiD,EAAQ,CAAC3C,SAAUuC,EAAaK,WACjClD,EAAAA,EAAAA,KAACS,EAAY,KACbT,EAAAA,EAAAA,KAACH,EAAO,KAERG,EAAAA,EAAAA,KAACmD,EAAAA,SAAQ,CAACC,UAAUpD,EAAAA,EAAAA,KAACwC,EAAAA,EAAM,IAAIzC,UAC7BC,EAAAA,EAAAA,KAACqD,EAAAA,GAAM,QAEL,C","sources":["components/AddInfo/AddInfo.styled.js","components/AddInfo/AddInfo.jsx","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AddinfoDiv = styled.div`\n  border-bottom: 1px solid #000;\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AddinfoDiv } from './AddInfo.styled';\n\nconst AddInfo = () => {\n  return (\n    <AddinfoDiv>\n      <h4>Additional information</h4>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n    </AddinfoDiv>\n  );\n};\n\nexport default AddInfo;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const GoBackBtn = styled(NavLink)`\n  border: 1px solid #b5b5b5;\n  margin-bottom: 10px;\n  display: inline-block;\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-weight: 600;\n  transition: all 0.3s ease;\n\n  &:hover {\n    color: blueviolet;\n    border: 1px solid blueviolet;\n  }\n`;\n","import React from 'react';\n\nimport { GoBackBtn } from './BackLink.styled';\n\nconst BackLink = ({ location }) => {\n  return (\n    <>\n      <GoBackBtn to={location}> &#129144; Go back</GoBackBtn>\n    </>\n  );\n};\n\nexport default BackLink;\n","import styled from 'styled-components';\n\nexport const DetailsDiv = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: flex-start;\n  border-bottom: 1px solid;\n  padding-bottom: 15px;\n`;\n","import Loader from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/api';\nimport { DetailsDiv } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n\n  const date = movieDetails ? movieDetails.release_date.slice(0, 4) : '';\n  const score = movieDetails ? Math.round(movieDetails.vote_average * 10) : 0;\n  const overview = movieDetails ? movieDetails.overview : '';\n  const genresArray = movieDetails\n    ? movieDetails.genres.map(genre => genre.name).join(', ')\n    : '';\n\n  useEffect(() => {\n    if (!movieId) return; //Отклонить юзэффект при первом рендере\n\n    const fetchMovieData = async () => {\n      try {\n        // setIsLoading(true);\n        const movieData = await fetchMovieDetails(movieId);\n        setMovieDetails(movieData);\n        // toast.success('Your posts details successfully fetched', toastConfig);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n        // setError(error.messag);\n        // toast.error(error.message, toastConfig);\n      } finally {\n        // setIsLoading(false);\n      }\n    };\n\n    fetchMovieData();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <Loader />;\n  }\n\n  return (\n    <DetailsDiv>\n      <img\n        src={\n          movieDetails.poster_path\n            ? `https://image.tmdb.org/t/p/w300${movieDetails.poster_path}`\n            : `https://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/No-image-available.jpg/250px-No-image-available.jpg`\n        }\n        alt={movieDetails.title}\n      />\n\n      <div>\n        <h2>\n          {movieDetails.title} ({date})\n        </h2>\n        <p>User Score: {score ? score : 'no score'} %</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genresArray}</p>\n      </div>\n    </DetailsDiv>\n  );\n};\n\nexport default MovieDetails;\n","import AddInfo from 'components/AddInfo/AddInfo';\nimport BackLink from 'components/BackLink/BackLink';\nimport Loader from 'components/Loader/Loader';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport React, { Suspense, useRef } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\n\nconst MovieDetailsPage = () => {\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  return (\n    <div>\n      <BackLink location={backLinkHref.current} />\n      <MovieDetails />\n      <AddInfo />\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["AddinfoDiv","styled","div","AddInfo","_jsxs","children","_jsx","Link","to","GoBackBtn","NavLink","_ref","location","_Fragment","DetailsDiv","MovieDetails","movieDetails","setMovieDetails","useState","movieId","useParams","date","release_date","slice","score","Math","round","vote_average","overview","genresArray","genres","map","genre","name","join","useEffect","async","movieData","fetchMovieDetails","error","console","fetchMovieData","src","poster_path","alt","title","Loader","MovieDetailsPage","_location$state$from","_location$state","useLocation","backLinkHref","useRef","state","from","BackLink","current","Suspense","fallback","Outlet"],"sourceRoot":""}